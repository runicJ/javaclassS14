<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javaclassS14.dao.OrderDAO">

  <select id="getOrderMaxIdx" resultType="com.spring.javaclassS14.vo.OrderVO">
    SELECT MAX(orderIdx) AS orderIdx FROM orders
  </select>

  <select id="getCartIdx" parameterType="int" resultType="com.spring.javaclassS14.vo.CartVO">
    SELECT * FROM cart WHERE cartIdx = #{cartIdx}
  </select>
  
  <select id="getOrderCheck" resultType="int">
    SELECT * FROM order_p WHERE userId = #{userId} and productIdx = #{productIdx} limit 1;
  </select>
  
  

  <insert id="setOrder" parameterType="com.spring.javaclassS14.vo.OrderVO">
    INSERT INTO orders (orderIdx, userId, totalPrice, couponIdx, pointUse, orderStatus, orderDate, orderProductIdx, productIdx, orderQuantity, price, optionIdx)
    VALUES (#{orderIdx}, #{userId}, #{totalPrice}, #{couponIdx}, #{pointUse}, #{orderStatus}, #{orderDate}, #{orderProductIdx}, #{productIdx}, #{orderQuantity}, #{price}, #{optionIdx})
  </insert>

  <delete id="setCartDeleteAll" parameterType="int">
    DELETE FROM cart WHERE orderProductIdx = #{orderProductIdx}
  </delete>

  <insert id="setDelivery" parameterType="com.spring.javaclassS14.vo.OrderVO">
    INSERT INTO delivery (orderIdx, receiverName, receiverTel, receiverAddress, country, imp_uid, merchant_uid, paid_amount, apply_num)
    VALUES (#{orderIdx}, #{receiverName}, #{receiverTel}, #{receiverAddress}, #{country}, #{imp_uid}, #{merchant_uid}, #{paid_amount}, #{apply_num})
  </insert>

  <update id="setUserPointPlus">
    UPDATE users SET point = point + #{point} WHERE userId = #{userId}
  </update>

  <select id="getOrderDelivery" parameterType="String" resultType="com.spring.javaclassS14.vo.OrderVO">
    SELECT * FROM order_delivery WHERE orderIdx = #{orderIdx}
  </select>

  <select id="getTotalDeleveryOrder" parameterType="int" resultType="int">
    SELECT SUM(totalPrice) FROM orders WHERE orderIdx = #{orderIdx}
  </select>

  <!-- CartItem의 ResultMap 정의 -->
  <resultMap id="CartItemResultMap" type="com.spring.javaclassS14.vo.CartItem">
      <result property="productIdx" column="productIdx"/>
      <result property="optionIdx" column="optionIdx"/>
      <result property="quantity" column="quantity"/>
      <result property="isSoldOut" column="isSoldOut"/>
      <result property="addedDate" column="addedDate"/>
      <result property="productThumb" column="productThumb"/>
      <result property="productName" column="productName"/>
      <result property="productPrice" column="productPrice"/>
      <result property="optionName" column="optionName"/>
      <result property="optionGroupName" column="optionGroupName"/>
  </resultMap>

  <!-- CartVO의 ResultMap 정의 -->
  <resultMap id="CartVOResultMap" type="com.spring.javaclassS14.vo.CartVO">
      <result property="cartIdx" column="cartIdx"/>
      <result property="userId" column="userId"/>
      <collection property="items" ofType="com.spring.javaclassS14.vo.CartItem" column="cartIdx" select="getCartItemsByCartIdx"/>
  </resultMap>

  <!-- 장바구니 항목의 CartItem 가져오기 -->
  <select id="getCartItemsByCartIdx" parameterType="int" resultMap="CartItemResultMap">
      SELECT 
          c.productIdx,
          c.optionIdx,
          c.quantity,
          c.isSoldOut,
          c.addedDate,
          p.productThumb,
          p.productName,
          p.productPrice,
          IFNULL(o.optionName, '기본') AS optionName,
          IFNULL(g.optionGroupName, '기본') AS optionGroupName
      FROM 
          cart c
      JOIN
          product p ON c.productIdx = p.productIdx
      LEFT JOIN
          product_option o ON c.optionIdx = o.optionIdx
      LEFT JOIN
          product_option_group g ON o.optionGroupIdx = g.optionGroupIdx
      WHERE 
          c.cartIdx = #{cartIdx}
  </select>
    
</mapper>
