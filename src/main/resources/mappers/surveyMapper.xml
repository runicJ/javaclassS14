<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javaclassS14.dao.SurveyDAO">

    <!-- Insert Survey -->
    <insert id="insertSurv">
        INSERT INTO survey VALUES (default, #{surveyDto.survTitle}, #{surveyDto.survDesc}, #{surveyDto.useYn}, default, #{surveyDto.userId}, default, default);
    </insert>

    <!-- Insert Survey Question -->
    <insert id="insertSurvqust" useGeneratedKeys="true" keyProperty="questNo">
        INSERT INTO survQuest (survNo, questOrder, questContent, questType)
        VALUES (default, #{survqustDto.questOrder}, #{survqustDto.questContent}, #{survqustDto.questType});
    </insert>

    <!-- Insert Survey Option -->
    <insert id="insertQustopt" parameterType="com.spring.javaclassS14.vo.SurveyOptionVO" useGeneratedKeys="true" keyProperty="optNo">
        INSERT INTO questOpt (questNo, optOrder, optContent)
        VALUES (#{questNo}, #{optOrder}, #{optContent});
    </insert>

    <select id="getSurvey" parameterType="int" resultType="com.spring.javaclassS14.vo.SurveyVO">
        SELECT survNo, survTitle, survDesc, userId, useYn, delYn, createDate, modDate
        FROM Survey
        WHERE survNo = #{survNo};
    </select>

    <select id="getSurvqustList" parameterType="int" resultType="com.spring.javaclassS14.vo.SurveyQuestionVO">
        SELECT questNo, survNo, questOrder, questContent, questType
        FROM survQuest
        WHERE survNo = #{survNo};
    </select>

    <select id="getQustoptList" parameterType="int" resultType="com.spring.javaclassS14.vo.SurveyOptionVO">
        SELECT optNo, questNo, optOrder, optContent
        FROM questOpt
        WHERE questNo = #{questNo};
    </select>

    <update id="delOneSurvey" parameterType="int">
        UPDATE Survey SET delYn = 'Y', useYn = 'N' WHERE survNo = #{survNo};
    </update>

    <delete id="delSurvqust" parameterType="int">
        DELETE FROM survQuest WHERE survNo = #{survNo};
    </delete>

    <delete id="delQustopt" parameterType="int">
        DELETE FROM questOpt WHERE questNo IN (SELECT questNo FROM survQuest WHERE survNo = #{survNo});
    </delete>

    <delete id="delAnswer" parameterType="int">
        DELETE FROM answer WHERE questNo IN (SELECT questNo FROM survQuest WHERE survNo = #{survNo});
    </delete>

    <update id="updateNewSurv" parameterType="com.spring.javaclassS14.vo.SurveyVO">
        UPDATE Survey 
        SET survTitle = #{survTitle}, survDesc = #{survDesc}, userId = #{userId}, useYn = #{useYn}, delYn = #{delYn}, modDate = NOW()
        WHERE survNo = #{survNo};
    </update>

    <insert id="insertNewSurvqust" parameterType="com.spring.javaclassS14.vo.SurveyQuestionVO">
        INSERT INTO survQuest (questNo, survNo, questOrder, questContent, questType)
        VALUES (#{questNo}, #{survNo}, #{questOrder}, #{questContent}, #{questType});
    </insert>

    <insert id="insertAnswer" parameterType="com.spring.javaclassS14.vo.SurveyAnswerVO">
        INSERT INTO answer (ansNo, questNo, userId, ansContent, ansLong, ansDate)
        VALUES (#{ansNo}, #{questNo}, #{userId}, #{ansContent}, #{ansLong}, NOW());
    </insert>

    <select id="resSurvYn" parameterType="com.spring.javaclassS14.vo.SurveyVO" resultType="int">
        SELECT COUNT(*)
        FROM (SELECT questNo FROM survQuest WHERE survNo = #{survNo}) AS qust
        INNER JOIN (SELECT questNo FROM answer WHERE userId = #{userId}) AS answ
        ON qust.questNo = answ.questNo;
    </select>

    <sql id="search">
        <if test="keyword != null and keyword != ''">
            AND
            <choose>
                <when test="'all'.equals(srchTyp)">
                    (
                        s.survTitle LIKE CONCAT('%', #{keyword}, '%')
                        OR m.nickName LIKE CONCAT('%', #{keyword}, '%')
                        OR s.survNo LIKE #{keyword}
                    )
                </when>
                <when test="'title'.equals(srchTyp)">
                    s.survTitle LIKE CONCAT('%', #{keyword}, '%')
                </when>
                <when test="'regid'.equals(srchTyp)">
                    m.nickName LIKE CONCAT('%', #{keyword}, '%')
                </when>
                <when test="'survNo'.equals(srchTyp)">
                    s.survNo = #{keyword}
                </when>
            </choose>
        </if>
    </sql>

    <sql id="mySearch">
        <if test="keyword != null and keyword != ''">
            AND survTitle LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <choose>
            <when test="'useY'.equals(srchTyp)">
                AND useYn = 'y'
            </when>
            <when test="'useN'.equals(srchTyp)">
                AND useYn = 'n'
            </when>
        </choose>
    </sql>

    <select id="getSurvList" parameterType="com.spring.javaclassS14.vo.SearchVo" resultType="com.spring.javaclassS14.vo.SurveyVO">
        SELECT survNo, survTitle, createDate, modDate, nickName, rownum
        FROM (
            SELECT s.survNo, s.survTitle, s.userId, s.createDate, s.modDate, m.nickName, ROW_NUMBER() OVER (ORDER BY s.survNo DESC) AS rownum
            FROM Survey s
            LEFT JOIN users m ON s.userId = m.userId
            WHERE useYn = 'y' AND delYn = 'n'
            <include refid="search" />
        ) A
        <if test="firstRecordIndex != null and lastRecordIndex != null">
            WHERE rownum BETWEEN #{firstRecordIndex} AND #{lastRecordIndex}
        </if>
    </select>

    <select id="getListCnt" parameterType="com.spring.javaclassS14.vo.SearchVo" resultType="int">
        SELECT COUNT(s.survNo)
        FROM Survey s
        LEFT JOIN users m ON s.userId = m.userId
        WHERE useYn = 'y' AND delYn = 'n'
        <include refid="search" />
    </select>

    <select id="getMyList" parameterType="com.spring.javaclassS14.vo.SearchVo" resultType="com.spring.javaclassS14.vo.SurveyVO">
        SELECT survNo, survTitle, createDate, modDate, useYn, rownum
        FROM (
            SELECT survNo, survTitle, useYn, createDate, modDate, ROW_NUMBER() OVER (ORDER BY survNo DESC) AS rownum
            FROM Survey
            WHERE userId = #{userId} AND delYn = 'n'
            <include refid="mySearch" />
        ) A
        <if test="firstRecordIndex != null and lastRecordIndex != null">
            WHERE rownum BETWEEN #{firstRecordIndex} AND #{lastRecordIndex}
        </if>
    </select>

    <select id="getOneSurv" parameterType="int" resultType="com.spring.javaclassS14.vo.SurveyVO">
        SELECT survNo, survTitle, survDesc, userId, useYn, delYn, createDate, modDate
        FROM Survey
        WHERE survNo = #{survNo};
    </select>

    <select id="getSurvQust" parameterType="int" resultType="com.spring.javaclassS14.vo.SurveyQuestionVO">
        SELECT questNo, questContent, questType, questOrder
        FROM survQuest
        WHERE survNo = #{survNo};
    </select>

    <select id="getAnswer" parameterType="int" resultType="com.spring.javaclassS14.vo.SurveyAnswerVO">
        SELECT COUNT(*) AS count, ansContent
        FROM answer
        WHERE questNo = #{questNo}
        GROUP BY ansContent;
    </select>

    <select id="getLongAnswer" parameterType="int" resultType="com.spring.javaclassS14.vo.SurveyAnswerVO">
        SELECT ansLong
        FROM answer
        WHERE questNo = #{questNo};
    </select>

    <select id="getRegNick" parameterType="com.spring.javaclassS14.vo.SurveyVO" resultType="String">
        SELECT m.nickName
        FROM Survey s
        LEFT JOIN users m ON s.userId = m.userId
        WHERE s.userId = #{userId} AND s.survNo = #{survNo};
    </select>

</mapper>
