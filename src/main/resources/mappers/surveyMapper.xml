<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javaclassS14.dao.SurveyDAO">

    <!-- 설문 저장 -->
	<insert id="setSurveyInput" parameterType="com.spring.javaclassS14.vo.SurveyVO" useGeneratedKeys="true" keyProperty="surveyIdx">
	    INSERT INTO survey (surveyTitle, surveyDesc, useFlag, userIdx, surveyThumb)
	    VALUES (#{surveyTitle}, #{surveyDesc}, #{useFlag}, #{userIdx}, #{surveyThumb})
	</insert>

	<select id="getLastSurveyId" resultType="int">
	    SELECT LAST_INSERT_ID()
	</select>

    <!-- 설문 질문 저장 -->
	<insert id="saveSurveyQuestion" parameterType="com.spring.javaclassS14.vo.SurveyQuestionVO" useGeneratedKeys="true" keyProperty="questIdx">
	    INSERT INTO surveyquest (surveyIdx, questContent, questType, questOrder)
	    VALUES (#{surveyIdx}, #{questContent}, #{questType}, #{questOrder})
	</insert>
	
	<select id="getLastQuestId" resultType="int">
	    SELECT LAST_INSERT_ID()
	</select>

    <!-- 설문 질문의 선택지 저장 -->
	<insert id="saveSurveyOption" parameterType="com.spring.javaclassS14.vo.SurveyOptionVO" useGeneratedKeys="true" keyProperty="optionIdx">
	    INSERT INTO surveyoption (questIdx, optContent, optOrder)
	    VALUES (#{questIdx}, #{optContent}, #{optOrder})
	</insert>

    <!-- 특정 설문 정보 조회 -->
	<select id="getSurveyForm" parameterType="int" resultType="com.spring.javaclassS14.vo.SurveyVO">
	    SELECT surveyIdx, surveyTitle, surveyDesc, surveyThumb, useFlag, userIdx
	    FROM survey
	    WHERE surveyIdx = #{surveyIdx}
	</select>

    <!-- 특정 설문에 대한 질문 목록 조회 -->
	<select id="getSurveyQuestList" parameterType="int" resultType="com.spring.javaclassS14.vo.SurveyQuestionVO">
	    SELECT questIdx, surveyIdx, questContent, questType
	    FROM surveyquest
	    WHERE surveyIdx = #{surveyIdx}
	</select>

    <!-- 특정 질문의 선택지 목록 조회 -->
	<select id="getQuestOptList" parameterType="int" resultType="com.spring.javaclassS14.vo.SurveyOptionVO">
	    SELECT optionIdx, questIdx, optContent
	    FROM surveyoption
	    WHERE questIdx = #{questIdx}
	</select>

    <!-- 특정 질문에 대한 응답 통계 조회 -->
	<select id="getSurveyAnswerStats" parameterType="int" resultType="com.spring.javaclassS14.vo.SurveyAnswerVO">
	    SELECT 
	        questIdx, 
        	TRIM(IFNULL(answerContent, '미응답')) AS answerContent,
			COUNT(*) AS responseCount	    
		FROM surveyanswer
    	WHERE surveyIdx = #{surveyIdx}
	    GROUP BY questIdx, BINARY answerContent
	    ORDER BY responseCount DESC;
	</select>

    <!-- 설문 응답 저장 (Batch Insert) -->
	<insert id="setSurveyAnswerInputBatch" parameterType="java.util.List">
	    INSERT INTO surveyanswer (questIdx, userIdx, answerContent, answerLong, answerDate)
	    VALUES
	    <foreach collection="answerList" item="answer" separator=",">
	        (#{answer.questIdx}, #{answer.userIdx}, #{answer.answerContent}, #{answer.answerLong}, NOW())
	    </foreach>
	</insert>
	
    <!-- 설문 삭제 (delFlag = 'Y' 업데이트) -->
    <update id="delOneSurvey">
        UPDATE survey SET delFlag = 'Y' WHERE surveyIdx = #{surveyIdx};
    </update>

    <!-- 특정 설문의 전체 결과 조회 -->
    <select id="getOneSurv" resultType="com.spring.javaclassS14.vo.SurveyVO">
        SELECT * FROM survey WHERE surveyIdx = #{surveyIdx};
    </select>

    <!-- 특정 사용자의 설문 응답 여부 확인 -->
	<select id="resSurvYn" resultType="int">
	    SELECT COUNT(*) 
	    FROM surveyAnswer 
	    WHERE surveyIdx = #{surveyIdx} 
	      AND userIdx = #{userIdx}
	</select>

    <!-- 설문 수정 -->
    <update id="updateSurvey">
        UPDATE survey 
        SET surveyTitle = #{surveyVO.surveyTitle}, 
            surveyDesc = #{surveyVO.surveyDesc}, 
            modDate = NOW() 
        WHERE surveyIdx = #{surveyVO.surveyIdx};
    </update>

    <!-- 페이징 적용된 설문 리스트 조회 -->
    <select id="getSurveyEventListPaged" resultType="com.spring.javaclassS14.vo.SurveyVO">
        SELECT * FROM survey WHERE delFlag = 'N' ORDER BY surveyIdx DESC
        LIMIT #{cntPerPage} OFFSET #{currentPage} - 1;
    </select>

    <!-- 설문 수정 시 기존 데이터 삭제 -->
    <delete id="delOldSurvey">
        DELETE FROM surveyquest WHERE surveyIdx = #{surveyIdx};
        DELETE FROM surveyOption WHERE questIdx IN (SELECT questIdx FROM surveyquest WHERE surveyIdx = #{surveyIdx});
        DELETE FROM surveyAnswer WHERE questIdx IN (SELECT questIdx FROM surveyquest WHERE surveyIdx = #{surveyIdx});
    </delete>

    <!-- 새로운 설문 데이터 삽입 -->
    <insert id="insertNewSurv">
        INSERT INTO survey (surveyIdx, surveyTitle, surveyDesc, surveyThumb, useFlag, delFlag, userIdx, createDate, modDate)
        VALUES (#{surveyVO.surveyIdx}, #{surveyVO.surveyTitle}, #{surveyVO.surveyDesc}, #{surveyVO.surveyThumb}, #{surveyVO.useFlag}, 'N', #{surveyVO.userIdx}, NOW(), NOW());
    </insert>

	<select id="getTotalSurveys" resultType = "int">
		SELECT COUNT(*) FROM survey WHERE userIdx = #{userIdx} AND delFlag = 'N';
	</select>

    <select id="getSurveyList" resultType="com.spring.javaclassS14.vo.SurveyVO">
        SELECT * FROM survey WHERE userIdx = #{userIdx} AND delFlag = 'N' ORDER BY surveyIdx DESC;
    </select>
    
    <select id="getSurveyEventList" resultType="com.spring.javaclassS14.vo.SurveyVO">
	    SELECT * FROM survey
	    WHERE useFlag = 'y' and delFlag = 'N'
	    ORDER BY createDate DESC;
	</select>

	<!-- 사용자의 특정 설문 응답 개수 조회 (surveyIdx 기반) -->
	<select id="countUserSurveyAnswers" resultType="int">
	    SELECT COUNT(*) 
	    FROM surveyAnswer
	    WHERE userIdx = #{userIdx} AND surveyIdx = #{surveyIdx}
	</select>
	
	<!-- 설문 응답 저장 (surveyIdx 포함) -->
	<insert id="insertSurveyAnswersBatch">
	    INSERT INTO surveyAnswer (surveyIdx, userIdx, questIdx, answerContent, answerLong)
	    VALUES 
	    <foreach collection="answerList" item="answer" separator=",">
	        (#{answer.surveyIdx}, #{answer.userIdx}, #{answer.questIdx}, #{answer.answerContent}, #{answer.answerLong})
	    </foreach>
	</insert>
	
	<!-- 특정 설문의 useFlag 변경 -->
	<update id="updateUseFlag">
	    UPDATE survey 
	    SET useFlag = #{useFlag} 
	    WHERE surveyIdx = #{surveyIdx};
	</update>
</mapper>