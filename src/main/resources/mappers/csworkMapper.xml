<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javaclassS14.dao.CsworkDAO">
	
    <select id="getBranchList" resultType="com.spring.javaclassS14.vo.BranchVO">
		select * from branch_store order by branchStoreIdx;
    </select>
    
    <select id="getBranchSearch" resultType="com.spring.javaclassS14.vo.BranchVO">
       select * from branch_store where branchName = #{branchName};
    </select>
    
    <select id="getBranchSearch2" resultType="com.spring.javaclassS14.vo.BranchVO">
       select * from branch_store where latitude = #{latitude} and longitude = #{longitude};
    </select>
    
    <select id="findTopNews" resultType="com.spring.javaclassS14.vo.SaveMypageVO">
       select partUrl, count(partUrl) as urlCnt from bookmark GROUP BY partUrl ORDER BY urlCnt desc limit #{limit};
    </select>
    
    <select id="getNoticeList" resultType="com.spring.javaclassS14.vo.CsworkVO">
       select * from notice where noticeStatus = 'y' order by noticeIdx;
    </select>
    
    <select id="getNoticeInfo" resultType="com.spring.javaclassS14.vo.CsworkVO">
       select * from notice where noticeIdx = #{noticeIdx} and noticeStatus = 'y';
    </select>
    
    <select id="getFaqList" resultType="com.spring.javaclassS14.vo.CsworkVO">
       select *, (select count(*) from faq group by faqCategory) as faqCategoryCnt from faq order by faqIdx, faqCategory;
    </select>
    <!--
    <select id="getFaqTopList" resultType="com.spring.javaclassS14.vo.CsworkVO">
       select * from faq where faqCategory = '회원/가입' or productTags like concat('%',#{tag},'%') order by faqIdx;
    </select>
    -->
        
    <select id="getFaqSearchList" resultType="com.spring.javaclassS14.vo.CsworkVO">
       select *, (select count(*) from faq where faqCategory=#{faqCategory} and faqContent like concat('%',#{keywork},'%')) as faqSearchCnt from faq order by faqIdx, faqCategory;
    </select>
    
    
    <insert id="setQnaInput">
    	<if test="${sUid.isEmpty}">
       insert into qna values(default, #{qnaVO.userId}, #{qnaVO.qnaTitle}, #{qnaVO.qnaContent}, default, default, default, default, #{qnaVO.qnaCategory}, #{qnaVO.email});
       </if>
       <if test="${!sUid.isEmpty}">
       insert into qna values(default, #{qnaVO.userId}, #{qnaVO.qnaTitle}, #{qnaVO.qnaContent}, default, default, default, default, #{qnaVO.qnaCategory}, default);
       </if>
    </insert>
    
    <insert id="setFaqInput">
    	insert into faq values(default, #{faqVO.faqCategory}, #{faqVO.faqTitle}, #{faqVO.Content}, default, #{faqVO.faqStatus})
    </insert>
    
</mapper>