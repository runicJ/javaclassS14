<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javaclassS14.dao.ShopDAO">
	
	<select id="getCategoryTop" resultType="com.spring.javaclassS14.vo.ShopVO">
		select * from product_top order by productTopIdx;
	</select>
	
	<select id="getCategoryMid" resultType="com.spring.javaclassS14.vo.ShopVO">
		select t.productTopIdx as productTopIdx, t.productTopName as productTopname, m.* from product_mid m left join product_top t on m.productTopIdx = t.productTopIdx order by t.productTopIdx, m.productMidIdx;
	</select>
	
	<select id="getCategoryTopHas" resultType="com.spring.javaclassS14.vo.ShopVO">
		select * from product_top where productTopName=#{productTopName};
	</select>
	
	<select id="getMidInTopHas" resultType="com.spring.javaclassS14.vo.ShopVO">
		select * from product_mid where productTopIdx=#{productTopIdx};
	</select>
	
	<select id="getCategoryMidHas" resultType="com.spring.javaclassS14.vo.ShopVO">
		select * from product_mid where productMidName=#{productMidName};
	</select>
	
	<select id="getProductInMidHas" resultType="com.spring.javaclassS14.vo.ShopVO">
		select * from product where productMidIdx=#{productMidIdx};
	</select>
	
  	<select id="getProductMaxIdx" resultType="com.spring.javaclassS14.vo.ShopVO">
		select * from product order by productIdx desc limit 1;
  	</select>
	
  	<select id="getProductList" resultType="com.spring.javaclassS14.vo.ShopVO">
	  <if test='part == "전체"'>
	  	<if test='sort == "전체"'>
	  		select *, (select count(*) from product) as productCnt from product <if test='productPrice != 0'>where <![CDATA[productPrice < #{productPrice}]]></if> order by productIdx desc;
	  	</if>
 	  	<if test='sort != "전체"'>
	  		select *, (select count(*) from product) as productCnt from product <if test='productPrice != 0'>where <![CDATA[productPrice < #{productPrice}]]></if> order by #{sort};
 	  	</if>
	  </if>
 	  <if test='part != "전체"'>
	  	<if test='sort == "전체"'>
 	  		select *, (select count(*) from product where productMidIdx=#{part}) as productCnt from product where productMidIdx=#{part} <if test='productPrice != 0'>and <![CDATA[productPrice < #{productPrice}]]></if> order by productIdx desc;
 	  	</if>
 	  	<if test='sort != "전체"'>
 	  		select *, (select count(*) from product where productMidIdx=#{part}) as productCnt from product where productMidIdx=#{part} <if test='productPrice != 0'>and <![CDATA[productPrice < #{productPrice}]]></if> order by sort;
 	  	</if>
 	  </if>
  	</select>
 		
  	<select id="getProductNameOne" resultType="com.spring.javaclassS14.vo.ShopVO">
		select * from product where productName=#{productName};
  	</select>
  	
 	<select id="getProductNameOneVO" resultType="com.spring.javaclassS14.vo.ShopVO">
	    <!-- select * from dbProduct where productName = #{productName}; --> 
	    select *,(select productTopName from product_top where productTopIdx=#{vo.productTopIdx}) as productTopName,
	      (select productMidName from product_mid where productMidIdx=#{vo.productMidIdx}) as productMidName,
	      from product where productName = #{vo.productName}; 
  	</select>

  	<select id="getProductName" resultType="com.spring.javaclassS14.vo.ShopVO">
		select * from product where productTopIdx=#{productTopIdx} and productMidIdx=#{productMidIdx};
  	</select>
  	
	<select id="getProductInfo" resultType="com.spring.javaclassS14.vo.ShopVO">
	  	select product.*, top.productTopName, mid.productMidName
	  	from product, product_top top, product_mid mid
	  	where productIdx=#{productIdx} order by productIdx limit 1;
  	</select>
  	
  	<select id="getOptionList" resultType="com.spring.javaclassS14.vo.ShopVO">
  		select g.optiongroupIdx, g.optionGroupName, o.optionIdx, o.optionName from product_option_group as g left join product_option as o on g.optionGroupIdx=o.optionGroupIdx where g.productIdx=#{productIdx} order by g.optionGroupIdx, o.optionIdx;
  	</select>
  	
  	<select id="getOptionGroupSame" resultType="int">
  		select count(*) FROM product_option_group where productIdx = #{productIdx} AND optionGroupName = #{optionGroupName};
  	</select>
  	
  	<select id="getOptionSame" resultType="int">
  		select count(*) FROM product_option where optionGroupIdx = #{optionGroupIdx} AND optionName = #{optionName};
  	</select>
  	
  	<select id="getOptionGroup" resultType="com.spring.javaclassS14.vo.ShopVO">
  		select * FROM product_option_group where productIdx = #{productIdx} order by optionGroupIdx;
  	</select>
  	
 	<select id="getOptionHas" resultType="int">
  		select count(*) FROM product_option where optionGroupIdx = #{optionGroupIdx};
  	</select>
  	
 	<select id="getProduct" resultType="com.spring.javaclassS14.vo.ShopVO">
  		select * FROM product where productIdx = #{productIdx};
  	</select>
  	
 	<select id="getAllOption" resultType="com.spring.javaclassS14.vo.ShopVO">
  		select g.optiongroupIdx, g.optionGroupName, o.optionIdx, o.optionName, o.addPrice from product_option_group as g left join product_option as o on g.optionGroupIdx=o.optionGroupIdx where g.productIdx=#{productIdx} order by g.optionGroupIdx, o.optionIdx;
  	</select>
  	
 	<select id="getNewProduct" resultType="com.spring.javaclassS14.vo.ShopVO">
  		select *,datediff(createdDate, now()) as createDiff from product order by createdDate desc limit 6;
  	</select>
  	
 	<select id="getCartProductOptionSearch" resultType="com.spring.javaclassS14.vo.CartVO">
  		select * from cart where productIdx=#{productIdx} and optionIdx=#{optionIdx} and userId=#{userId};
  	</select>
  	  	
 	<select id="getProductTopMidList" resultType="com.spring.javaclassS14.vo.ShopVO">
  		select t.*, m.productMidIdx, m.productMidName, (select count(*) from product as p where p.productMidIdx = m.productMidIdx) as productCnt from product_top as t left join product_mid as m on t.productTopIdx = m.productTopIdx;
  	</select>


	<insert id="setCategoryTopInput">
		insert into product_top values (default, #{productTopName}, default, default);
	</insert>

	<insert id="setCategoryMidInput">
		insert into product_mid values (default, #{productTopIdx}, #{productMidName});
		update product_top set hasMid='y' where productTopIdx=#{productTopIdx};
	</insert>
	 	
 	<insert id="setProductInput">
    	insert into product values (default,#{vo.productCode},#{vo.productName},#{vo.productDetails},default,#{vo.productPrice},default,default,default,default,default,default,#{vo.productBrand},#{vo.productCountry},default,#{vo.productThumb},#{vo.shipAddress},default,#{vo.productTags},0,default,default,default,#{vo.productTopIdx},#{vo.productMidIdx},#{vo.content});
 	</insert>
	 	
 	<insert id="setOptionGroupInput">
    	insert into product_option_group values (default,#{productIdx},#{optionGroupName});
 	</insert>
	 	
	<insert id="setOptionInput">
	    insert into product_option values (default, #{optionGroupIdx}, #{optionName}, COALESCE(#{addPrice}, 0));
	</insert>
	
	<insert id="setShopCartInput">
	  insert into cart values (default,#{vo.userId},#{vo.productIdx},#{vo.quantity},default,default,#{vo.optionIdx});
	</insert>
	
	
	<update id="setShopCartUpdate">
		update cart set quantity=#{vo.quantity} where productIdx=#{vo.productIdx} and optionIdx=#{vo.optionIdx};
	</update>
	
	
	<delete id="setCategoryTopDelete">
		delete from product_mid where productTopIdx=#{productTopIdx};
	</delete>
	
	<delete id="setoptionGroupDelete">
		delete from product_option_group where optionGroupIdx=#{optionGroupIdx};
	</delete>
	
	<delete id="setOptionDelete">
		delete from product_option where optionIdx=#{optionIdx};
	</delete>
	
</mapper>