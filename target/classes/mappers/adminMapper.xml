<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javaclassS14.dao.AdminDAO">

<select id="getUserList" parameterType="map" resultType="com.spring.javaclassS14.vo.UserVO">
    SELECT * 
    FROM users
    WHERE level > 0
    <if test="keyword != null and keyword != ''">
        AND (name LIKE CONCAT('%', #{keyword}, '%') OR userId LIKE CONCAT('%', #{keyword}, '%'))
    </if>
    <if test="numericOption != null">
        <if test="numericOption == 3">
            AND level = 3
        </if>
        <if test="numericOption == 2">
            AND level = 2
        </if>
        <if test="numericOption == 1">
            AND level = 1
        </if>
        <if test="numericOption == 0.5">
            AND level = 0.5
        </if>
    </if>
    <if test="stringOption != null">
        <if test='stringOption == "정상"'>
            AND userStatus = 'on'
        </if>
        <if test='stringOption == "탈퇴"'>
            AND userStatus = 'off'
        </if>
        <if test='stringOption == "정지"'>
            AND userStatus = 'stop'
        </if>
     </if>
    ORDER BY ${orderBy}
    LIMIT #{startIndexNo}, #{pageSize};
</select>

<update id="updateUser">
    UPDATE users
    <set>
        <if test="userPwd != null">userPwd = #{userPwd},</if>
        <if test="name != null">name = #{name},</if>
        <if test="nickName != null">nickName = #{nickName},</if>
        <if test="email != null">email = #{email},</if>
        <if test="tel != null">tel = #{tel},</if>
        <if test="userImage != null">userImage = #{userImage},</if>
        <if test="gender != null">gender = #{gender},</if>
        <if test="registerWay != null">registerWay = #{registerWay},</if>
        <if test="userStatus != null">userStatus = #{userStatus},</if>
        <if test="level != null">level = #{level},</if>
        <if test="point != null">point = #{point},</if>
        policyFlag = #{policyFlag},
        updateDate = NOW()
    </set>
    WHERE userId = #{userId}
</update>

 	<select id="getDeleteUserList" resultType="com.spring.javaclassS14.vo.UserVO">
 		select *, datediff(deleteDate, now()) as deleteDiff from delete_users order by deleteIdx desc limit #{startIndexNo},#{pageSize};
 	</select>

 	<select id="getdeleteExUser" resultType="int">
 		select count(*) from delete_users where datediff(deleteDate, now()) <![CDATA[<=]]> -30;
 	</select>

 	<select id="getUserRegisterWay" resultType="com.spring.javaclassS14.vo.UserVO">
 		select registerWay, count(*) as wayCount from users group by registerWay;
 	</select>
 	
<update id="getDeleteUser">
    <if test="delFlag == 'Ok'">
        update delete_users 
        set userId = CONCAT('del_', userId), 
            email = CONCAT('del_', email) 
        where userId = #{userId};
        delete from users where userId = #{userId};
    </if>
    <if test="delFlag != 'Ok'">
        update users set userStatus = 'on' where userId = #{userId};
        delete from delete_users where userId = #{userId};
    </if>
</update>

	<update id="updateUserStatus">
	    UPDATE users SET userStatus = #{userStatus} WHERE userId = #{userId}
	</update>
	
	<update id="deleteUser">
	    update users set level=99, userStatus='off' where userId=#{userId};
	    insert into delete_users (userId, deleteReason, deleteDate) values (#{userId}, '관리자', default);
	</update>
</mapper>